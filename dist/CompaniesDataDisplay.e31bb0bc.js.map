{"version":3,"sources":["index.js"],"names":["table","document","querySelector","tbody","filterInput","btnsContainer","datepicker","globalSortedCompanies","globalFilteredCompanies","fetchCompanies","response","fetch","data","json","fetchIncomes","id","mergeFetchObjects","fetchedCompanies","fetchedCompany","fetchedIncomes","incomes","calculateTotalIncome","companies","company","totalIncome","reduce","previous","current","Number","value","sortByTotalIncome","sort","a","b","pageButtons","currentPage","amountOfItemsPerPage","renderButtons","array","amountOfPages","Math","ceil","length","buttonElement","i","innerHTML","querySelectorAll","button","addEventListener","e","handlePageChange","handleCurrentPageFocus","renderCompanies","itemsOfPage","slice","companiesIntoElements","map","name","city","toFixed","join","companiesRows","companyRow","handleCompanyClick","btns","getElementsByClassName","btn","classList","remove","dataset","add","target","currentDate","Date","firstDay","getFullYear","getMonth","lastDay","specificCompany","globalSortedCompany","parentNode","key","lastMonthIncomesOfSpecificCompany","filter","item","parse","date","getTime","lastMonthTotalIncome","modalTemplate","insertAdjacentHTML","dateFrom","getElementById","dateTo","betweenDatesHandler","totalBetweenDatesDisplay","averageBetweenDatesDisplay","displayCustomDatesIncomes","timeFrom","timeTo","specificCompanyIncomesBetweenDates","totalIncomeBetweenDates","textContent","modal","modalClosingBtn","body","removeChild","bootFunction","sortedCompanies","filterByName","filteredCompanies","toLowerCase","includes"],"mappings":"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","file":"CompaniesDataDisplay.e31bb0bc.js","sourceRoot":"..","sourcesContent":["const table = document.querySelector('#table')\r\nconst tbody = document.querySelector('#tbody')\r\nconst filterInput = document.querySelector('#filterInput')\r\nconst btnsContainer = document.querySelector('#btnsContainer')\r\nconst datepicker = document.querySelector('#hwdp')\r\n\r\nlet globalSortedCompanies;\r\nlet globalFilteredCompanies;\r\n\r\nconst fetchCompanies = async () => {\r\n  let response = await fetch(`https://recruitment.hal.skygate.io/companies`);\r\n  let data = await response.json();\r\n  return data;\r\n}\r\n\r\nconst fetchIncomes = async (id) => {\r\n  let response = await fetch(`https://recruitment.hal.skygate.io/incomes/${id}`);\r\n  let data = await response.json();\r\n  return data;\r\n}\r\n\r\nconst mergeFetchObjects = async () => {\r\n  let fetchedCompanies = await fetchCompanies();\r\n  for (fetchedCompany of fetchedCompanies) {\r\n    const fetchedIncomes = await fetchIncomes(fetchedCompany.id)\r\n    fetchedCompany.incomes = await fetchedIncomes.incomes;\r\n  }\r\n  return fetchedCompanies;\r\n}\r\n\r\nconst calculateTotalIncome = async () => {\r\n  const companies = await mergeFetchObjects();\r\n  for (company of companies) {\r\n    company.totalIncome = company.incomes.reduce((previous, current) => {\r\n      return previous + Number(current.value);\r\n    }, 0);\r\n  }\r\n  return companies;\r\n}\r\n\r\nconst sortByTotalIncome = async () => {\r\n  const companies = await calculateTotalIncome();\r\n  companies.sort((a, b) => (a.totalIncome < b.totalIncome) ? 1 : -1)\r\n  globalSortedCompanies = companies;\r\n  return companies;\r\n}\r\n\r\n//Pagination\r\nlet pageButtons;\r\n\r\nlet currentPage = 1;\r\nconst amountOfItemsPerPage = 30;\r\n\r\nconst renderButtons = (array) => {\r\n  const amountOfPages = Math.ceil(array.length / amountOfItemsPerPage)\r\n  let buttonElement = \"\";\r\n  for (let i = 1; i <= amountOfPages; i++) {\r\n    buttonElement += `<button class=\"pageButton\" data-value=${i}>${i}</button>`\r\n  }\r\n  btnsContainer.innerHTML = buttonElement;\r\n  pageButtons = document.querySelectorAll('.pageButton')\r\n  for (button of pageButtons) {\r\n    button.addEventListener(\"click\", (e) => {\r\n      handlePageChange(e)\r\n    })\r\n  }\r\n  handleCurrentPageFocus();\r\n}\r\n\r\n//Render\r\nconst renderCompanies = (array) => {\r\n  const itemsOfPage = array.slice((currentPage * amountOfItemsPerPage - amountOfItemsPerPage), (amountOfItemsPerPage * currentPage))\r\n  const companiesIntoElements = itemsOfPage.map((company) => (\r\n    `<tr class=\"company\" data-key=${company.id}>\r\n      <td>${company.id}</td>\r\n      <td>${company.name}</td>\r\n      <td>${company.city}</td>\r\n      <td>${company.totalIncome.toFixed(2)}</td>\r\n    </tr>`\r\n    )).join('')\r\n  tbody.innerHTML = companiesIntoElements;\r\n  const companiesRows = document.querySelectorAll('.company');\r\n  for (companyRow of companiesRows) {\r\n    companyRow.addEventListener('click', (e) => {handleCompanyClick(e)})\r\n  };\r\n}\r\n    \r\nconst handleCurrentPageFocus = () => {\r\n  const btns = document.getElementsByClassName('pageButton');\r\n  for (btn of btns) {\r\n    btn.classList.remove('currentPage')\r\n    if(currentPage === Number(btn.dataset.value)) {\r\n      btn.classList.add('currentPage')\r\n    }\r\n  }\r\n}\r\n\r\nconst handlePageChange = (e) => {\r\n  currentPage = Number(e.target.dataset.value);\r\n  renderCompanies(globalFilteredCompanies || globalSortedCompanies);\r\n  handleCurrentPageFocus()\r\n}\r\n\r\nconst handleCompanyClick = (e) => {\r\n  const currentDate = new Date();\r\n  const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\r\n  const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\r\n\r\n  let specificCompany;\r\n  for (globalSortedCompany of globalSortedCompanies) {\r\n    if(Number(e.target.parentNode.dataset.key) === globalSortedCompany.id) {\r\n      specificCompany = globalSortedCompany;\r\n    };\r\n  };\r\n\r\n  let lastMonthIncomesOfSpecificCompany = specificCompany.incomes.filter(item => Date.parse(item.date) > firstDay.getTime() && Date.parse(item.date) < lastDay.getTime());\r\n  let lastMonthTotalIncome = lastMonthIncomesOfSpecificCompany.reduce((previous, current) => {\r\n    return previous + Number(current.value);\r\n  }, 0);\r\n\r\n  const modalTemplate = `\r\n  <div class=\"customModal\">\r\n    <p>id: ${specificCompany.id}</p>\r\n    <p>name: ${specificCompany.name}</p>\r\n    <p>city: ${specificCompany.city}</p>\r\n    <p>total income: ${specificCompany.totalIncome}</p>\r\n    <p>average income: ${specificCompany.totalIncome / specificCompany.incomes.length}</p>\r\n    <p>Last month total income: ${lastMonthTotalIncome}</p>\r\n    <div class=\"datepickers\">\r\n      <input type=\"date\" id=\"dateFrom\"/>\r\n      <input type=\"date\" id=\"dateTo\"/>\r\n      <button id=\"handleBetweenDates\">Check!</button>\r\n    </div>\r\n    <p>total income between dates: <span id=\"totalBetweenDates\">0</span></p>\r\n    <p>average income between dates: <span id=\"averageBetweenDates\">0</span></p>\r\n    <button class=\"modalClosingBtn\">OK!</button>\r\n  </div>\r\n  `;\r\n  table.insertAdjacentHTML('afterend', modalTemplate);\r\n\r\n  const dateFrom = document.getElementById('dateFrom');\r\n  const dateTo = document.getElementById('dateTo');\r\n  const betweenDatesHandler = document.getElementById('handleBetweenDates');\r\n  const totalBetweenDatesDisplay = document.getElementById('totalBetweenDates')\r\n  const averageBetweenDatesDisplay = document.getElementById('averageBetweenDates')\r\n\r\n  const displayCustomDatesIncomes = () => {\r\n    const timeFrom = new Date(dateFrom.value).getTime();\r\n    const timeTo = new Date(dateTo.value).getTime();\r\n\r\n    const specificCompanyIncomesBetweenDates = specificCompany.incomes.filter(item => Date.parse(item.date) > timeFrom && Date.parse(item.date) < timeTo);\r\n    const totalIncomeBetweenDates = specificCompanyIncomesBetweenDates.reduce((previous, current) => {\r\n      return previous + Number(current.value);\r\n    }, 0);\r\n\r\n    totalBetweenDatesDisplay.textContent = totalIncomeBetweenDates;\r\n    averageBetweenDatesDisplay.textContent = totalIncomeBetweenDates / specificCompanyIncomesBetweenDates.length;\r\n  }\r\n\r\n  betweenDatesHandler.addEventListener('click', () => displayCustomDatesIncomes())\r\n\r\n  const modal = document.querySelector('.customModal');\r\n  const modalClosingBtn = document.querySelector('.modalClosingBtn');\r\n  modalClosingBtn.addEventListener('click', () => {\r\n    document.body.removeChild(modal);\r\n  })\r\n\r\n}\r\n\r\n//Boot\r\nconst bootFunction = async () => {\r\n  const sortedCompanies = (globalSortedCompanies || await sortByTotalIncome());\r\n  renderButtons(sortedCompanies);\r\n  renderCompanies(sortedCompanies);\r\n  filterInput.addEventListener(\"input\", () => {\r\n    filterByName();\r\n  })\r\n}\r\n    \r\nconst filterByName = async () => {\r\n  currentPage = 1;\r\n  const companies = globalSortedCompanies;\r\n  const filteredCompanies = companies.filter((i) => i.name.toLowerCase().includes(filterInput.value.toLowerCase()));\r\n  globalFilteredCompanies = filteredCompanies;\r\n  renderButtons(filteredCompanies);\r\n  renderCompanies(filteredCompanies);\r\n}\r\n\r\nbootFunction();\r\n\r\n"]}