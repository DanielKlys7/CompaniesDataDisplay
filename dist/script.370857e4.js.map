{"version":3,"sources":["src/script/index.js"],"names":["table","document","querySelector","wrapper","tbody","filterInput","btnsContainers","querySelectorAll","globalCompanies","globalSortedCompanies","globalFilteredCompanies","fetchCompanies","response","fetch","data","json","fetchIncomes","id","mergeFetchObjects","fetchedCompanies","fetchedCompany","fetchedIncomes","incomes","calculateTotalIncome","companies","company","totalIncome","reduce","previous","current","Number","value","sortByParam","param","sort","a","b","name","city","pageButtons","currentPage","amountOfItemsPerPage","renderButtons","array","amountOfPages","Math","ceil","length","buttonElement","i","forEach","innerHTML","button","addEventListener","e","handlePageChange","addCurrentPage","renderCompanies","handleCurrentPageFocus","minusCurrentPage","btns","getElementsByClassName","btn","classList","remove","dataset","add","target","itemsOfPage","slice","companiesIntoElements","map","toFixed","join","companiesRows","companyRow","handleCompanyClick","specificCompany","globalSortedCompany","parentNode","key","currentDate","Date","firstDay","getFullYear","getMonth","lastDay","lastMonthIncomesOfSpecificCompany","filter","item","parse","date","getTime","lastMonthTotalIncome","modalTemplate","insertAdjacentHTML","dateFrom","dateTo","betweenDatesHandler","totalBetweenDatesDisplay","averageBetweenDatesDisplay","displayCustomDatesIncomes","timeFrom","timeTo","specificCompanyIncomesBetweenDates","totalIncomeBetweenDates","textContent","modal","modalClosingBtn","body","removeChild","filterByName","filteredCompanies","toLowerCase","includes","sortByInput","bootFunction","sortedCompanies"],"mappings":"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","file":"script.370857e4.js","sourceRoot":"..","sourcesContent":["const table = document.querySelector('.table')\r\nconst wrapper = document.querySelector('.wrapper');\r\nconst tbody = document.querySelector('.table__body')\r\nconst filterInput = document.querySelector('.filterInput')\r\nconst btnsContainers = document.querySelectorAll('.btnsContainer')\r\n\r\nlet globalCompanies;\r\nlet globalSortedCompanies;\r\nlet globalFilteredCompanies;\r\n\r\nconst fetchCompanies = async () => {\r\n  let response = await fetch(`https://recruitment.hal.skygate.io/companies`);\r\n  let data = await response.json();\r\n  return data;\r\n};\r\n\r\nconst fetchIncomes = async (id) => {\r\n  let response = await fetch(`https://recruitment.hal.skygate.io/incomes/${id}`);\r\n  let data = await response.json();\r\n  return data;\r\n};\r\n\r\nconst mergeFetchObjects = async () => {\r\n  let fetchedCompanies = await fetchCompanies();\r\n  for (fetchedCompany of fetchedCompanies) {\r\n    const fetchedIncomes = await fetchIncomes(fetchedCompany.id);\r\n    fetchedCompany.incomes = await fetchedIncomes.incomes;\r\n  };\r\n  return fetchedCompanies;\r\n};\r\n\r\nconst calculateTotalIncome = async () => {\r\n  const companies = await mergeFetchObjects();\r\n  for (company of companies) {\r\n    company.totalIncome = company.incomes.reduce((previous, current) => {\r\n      return previous + Number(current.value);\r\n    }, 0);\r\n  }\r\n  globalCompanies = companies;\r\n  return companies;\r\n}\r\n\r\nconst sortByParam = async (param) => {\r\n  const companies = (globalCompanies || await calculateTotalIncome());\r\n  switch (param) {\r\n    case \"totalIncome\":\r\n      companies.sort((a, b) => (a.totalIncome < b.totalIncome) ? 1 : -1);\r\n      break;\r\n    case \"id\":\r\n      companies.sort((a, b) => (Number(a.id) < Number(b.id)) ? -1 : 1);\r\n      break;\r\n    case \"name\":\r\n      companies.sort((a, b) => (a.name < b.name) ? -1 : 1);\r\n      break;\r\n    case \"city\":\r\n      companies.sort((a, b) => (a.city < b.city) ? -1 : 1);\r\n      break;\r\n    default:\r\n      companies.sort((a, b) => (a.totalIncome < b.totalIncome) ? 1 : -1);\r\n      break;\r\n  }\r\n  globalSortedCompanies = companies;\r\n  return companies;\r\n}\r\n\r\n//Pagination\r\nlet pageButtons;\r\n\r\nlet currentPage = 1;\r\nconst amountOfItemsPerPage = 15;\r\n\r\nconst renderButtons = (array) => {\r\n  const amountOfPages = Math.ceil(array.length / amountOfItemsPerPage);\r\n  let buttonElement = \"\";\r\n  for (let i = -1; i <= 2; i++) {\r\n    if ((currentPage + i <= 20) && (currentPage + i > 0)) {\r\n      buttonElement += `<button class=\"pageButton\" data-value=${currentPage + i}>${currentPage+ i}</button>`\r\n    }\r\n  };\r\n  btnsContainers.forEach(i => i.innerHTML = `\r\n    <button class=\"pageButton\" data-value=\"1\">first</button>\r\n    <button class=\"previousPageBtn\">&#8592; previous</button>\r\n    ${buttonElement}\r\n    <button class=\"nextPageBtn\">next &#8594;</button>\r\n    <button class=\"pageButton\" data-value=${amountOfPages}>last</button>`\r\n  );\r\n  pageButtons = document.querySelectorAll('.pageButton');\r\n  for (button of pageButtons) {\r\n    button.addEventListener(\"click\", (e) => {\r\n      handlePageChange(e);\r\n    });\r\n  };\r\n  const addCurrentPage = () => {\r\n    if (currentPage < amountOfPages) {\r\n      currentPage++;\r\n      renderCompanies(globalFilteredCompanies || globalSortedCompanies);\r\n      renderButtons(globalSortedCompanies);\r\n      handleCurrentPageFocus();\r\n    }\r\n  }\r\n  const minusCurrentPage = () => {\r\n    if (currentPage > 1) {\r\n      currentPage--;\r\n      renderCompanies(globalFilteredCompanies || globalSortedCompanies);\r\n      renderButtons(globalSortedCompanies);\r\n      handleCurrentPageFocus();\r\n    } \r\n  }\r\n  document.querySelectorAll('.previousPageBtn').forEach(i => i.addEventListener('click', () => minusCurrentPage()));\r\n  document.querySelectorAll('.nextPageBtn').forEach(i => i.addEventListener('click', () => addCurrentPage()));\r\n  handleCurrentPageFocus();\r\n};\r\n\r\nconst handleCurrentPageFocus = () => {\r\n  const btns = document.getElementsByClassName('pageButton');\r\n  for (btn of btns) {\r\n    btn.classList.remove('currentPage')\r\n    if(currentPage === Number(btn.dataset.value)) {\r\n      btn.classList.add('currentPage')\r\n    }\r\n  }\r\n}\r\n\r\nconst handlePageChange = (e) => {\r\n  currentPage = Number(e.target.dataset.value);\r\n  renderCompanies(globalFilteredCompanies || globalSortedCompanies);\r\n  renderButtons(globalSortedCompanies);\r\n  handleCurrentPageFocus();\r\n}\r\n\r\n//Render\r\nconst renderCompanies = (array) => {\r\n  const itemsOfPage = array.slice((currentPage * amountOfItemsPerPage - amountOfItemsPerPage), (amountOfItemsPerPage * currentPage));\r\n  const companiesIntoElements = itemsOfPage.map((company) => (\r\n    `<tr class=\"body__company\" data-key=${company.id}>\r\n      <td>${company.id}</td>\r\n      <td>${company.name}</td>\r\n      <td>${company.city}</td>\r\n      <td>${company.totalIncome.toFixed(2)}</td>\r\n    </tr>`\r\n    )).join('');\r\n  tbody.innerHTML = companiesIntoElements;\r\n  const companiesRows = document.querySelectorAll('.body__company');\r\n  for (companyRow of companiesRows) {\r\n    companyRow.addEventListener('click', (e) => {handleCompanyClick(e)})\r\n  };\r\n}\r\n\r\n//Company click and modal\r\nconst handleCompanyClick = (e) => {\r\n  let specificCompany;\r\n  for (globalSortedCompany of globalSortedCompanies) {\r\n    if(Number(e.target.parentNode.dataset.key) === globalSortedCompany.id) {\r\n      specificCompany = globalSortedCompany;\r\n    };\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  const firstDay = new Date(currentDate.getFullYear(), currentDate.getMonth() - 1, 1);\r\n  const lastDay = new Date(currentDate.getFullYear(), currentDate.getMonth(), 0);\r\n\r\n  let lastMonthIncomesOfSpecificCompany = specificCompany.incomes.filter(item => Date.parse(item.date) > firstDay.getTime() && Date.parse(item.date) < lastDay.getTime());\r\n  let lastMonthTotalIncome = lastMonthIncomesOfSpecificCompany.reduce((previous, current) => {\r\n    return previous + Number(current.value);\r\n  }, 0);\r\n\r\n  const modalTemplate = `\r\n  <div class=\"customModal\">\r\n    <div class=\"customModal__basicData\">\r\n      <p>id: ${specificCompany.id}</p>\r\n      <p>name: ${specificCompany.name}</p>\r\n      <p>city: ${specificCompany.city}</p>\r\n      <p>total income: ${specificCompany.totalIncome}</p>\r\n      <p>average income: ${specificCompany.totalIncome / specificCompany.incomes.length}</p>\r\n      <p>Last month total income: ${lastMonthTotalIncome}</p>\r\n    </div>\r\n    <div class=\"datePickers\">\r\n      <label for=\"dateFrom\">Date from:</label>\r\n      <input id=\"dateFrom\" type=\"date\" class=\"datePickers__dateFrom\" placeholder=\"Date from\"/>\r\n      <label for=\"dateTo\">Date to:</label>\r\n      <input id=\"dateTo\" type=\"date\" class=\"datePickers__dateTo placeholder=\"Date to\"/>\r\n      <button class=\"handleBetweenDatesBtn\">Check!</button>\r\n    </div>\r\n    <div class=\"datePickers__dataDisplay\">\r\n      <p>total income between dates: <span class=\"totalBetweenDatesDisplay\">0</span></p>\r\n      <p>average income between dates: <span class=\"averageBetweenDatesDisplay\">0</span></p>\r\n    </div>\r\n    <button class=\"modalClosingBtn\">OK!</button>\r\n  </div>\r\n  `;\r\n  wrapper.insertAdjacentHTML('afterend', modalTemplate);\r\n\r\n  const dateFrom = document.querySelector('.datePickers__dateFrom');\r\n  const dateTo = document.querySelector('.datePickers__dateTo');\r\n  const betweenDatesHandler = document.querySelector('.handleBetweenDatesBtn');\r\n  const totalBetweenDatesDisplay = document.querySelector('.totalBetweenDatesDisplay')\r\n  const averageBetweenDatesDisplay = document.querySelector('.averageBetweenDatesDisplay')\r\n\r\n  const displayCustomDatesIncomes = () => {\r\n    const timeFrom = new Date(dateFrom.value).getTime();\r\n    const timeTo = new Date(dateTo.value).getTime();\r\n\r\n    const specificCompanyIncomesBetweenDates = specificCompany.incomes.filter(item => Date.parse(item.date) > timeFrom && Date.parse(item.date) < timeTo);\r\n    const totalIncomeBetweenDates = specificCompanyIncomesBetweenDates.reduce((previous, current) => {\r\n      return previous + Number(current.value);\r\n    }, 0);\r\n\r\n    totalBetweenDatesDisplay.textContent = totalIncomeBetweenDates;\r\n    averageBetweenDatesDisplay.textContent = totalIncomeBetweenDates / specificCompanyIncomesBetweenDates.length;\r\n  }\r\n\r\n  betweenDatesHandler.addEventListener('click', () => displayCustomDatesIncomes())\r\n\r\n  const modal = document.querySelector('.customModal');\r\n  const modalClosingBtn = document.querySelector('.modalClosingBtn');\r\n  modalClosingBtn.addEventListener('click', () => {\r\n    document.body.removeChild(modal);\r\n  })\r\n}\r\n//Filter By Name\r\nconst filterByName = async () => {\r\n  currentPage = 1;\r\n  const filteredCompanies = globalSortedCompanies.filter((i) => i.name.toLowerCase().includes(filterInput.value.toLowerCase()));\r\n  globalFilteredCompanies = filteredCompanies;\r\n  renderButtons(filteredCompanies);\r\n  renderCompanies(filteredCompanies);\r\n}\r\n//Sort by value\r\nconst sortByInput = document.querySelector('.sortInput');\r\nsortByInput.addEventListener('change', (e) => {\r\n  sortByParam(e.target.value);\r\n  renderCompanies(globalSortedCompanies);\r\n})\r\n\r\n//Boot\r\nconst bootFunction = async () => {\r\n  const sortedCompanies = (globalSortedCompanies || await sortByParam(\"totalIncome\"));\r\n  renderButtons(sortedCompanies);\r\n  renderCompanies(sortedCompanies);\r\n  filterInput.addEventListener(\"input\", () => {\r\n    filterByName();\r\n  })\r\n}\r\n    \r\n\r\nbootFunction();\r\n\r\n"]}